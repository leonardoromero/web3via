/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { GameManager, GameManagerInterface } from "../GameManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_trustedManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InsuficientGameBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPrize",
    type: "error",
  },
  {
    inputs: [],
    name: "NoPrizeOrAlreadyClaimed",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "prize",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "GameCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "GameResult",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "prize",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "winner",
        type: "address",
      },
    ],
    name: "PrizeClaimed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_winner",
        type: "address",
      },
    ],
    name: "airdropPrize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newManager",
        type: "address",
      },
    ],
    name: "changeTrustedManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "claimPrize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "prize",
        type: "uint256",
      },
    ],
    name: "createGame",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "gamePrize",
    outputs: [
      {
        internalType: "uint256",
        name: "prize",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "gameWinners",
    outputs: [
      {
        internalType: "address[]",
        name: "winners",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "games",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "prize",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "winner",
        type: "address",
      },
    ],
    name: "prizeGameWinner",
    outputs: [
      {
        internalType: "uint256",
        name: "prize",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_winners",
        type: "address[]",
      },
    ],
    name: "publishGameResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "trustedManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620011de380380620011de8339818101604052810190620000379190620000e8565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200011a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b08262000083565b9050919050565b620000c281620000a3565b8114620000ce57600080fd5b50565b600081519050620000e281620000b7565b92915050565b6000602082840312156200010157620001006200007e565b5b60006200011184828501620000d1565b91505092915050565b6110b4806200012a6000396000f3fe6080604052600436106100915760003560e01c80637bdd449c116100595780637bdd449c1461018057806386261faf146101bd578063d7098154146101e8578063d963570914610211578063e2080beb1461023a57610091565b8063117a5b90146100965780631f7254f3146100d557806333711cf8146100fe57806360104cef1461012757806368010c8614610143575b600080fd5b3480156100a257600080fd5b506100bd60048036038101906100b89190610a98565b610277565b6040516100cc93929190610b15565b60405180910390f35b3480156100e157600080fd5b506100fc60048036038101906100f79190610b78565b6102c1565b005b34801561010a57600080fd5b5061012560048036038101906101209190610d11565b61036c565b005b610141600480360381019061013c9190610d6d565b610563565b005b34801561014f57600080fd5b5061016a60048036038101906101659190610a98565b610669565b6040516101779190610dad565b60405180910390f35b34801561018c57600080fd5b506101a760048036038101906101a29190610a98565b610689565b6040516101b49190610e86565b60405180910390f35b3480156101c957600080fd5b506101d261072d565b6040516101df9190610ea8565b60405180910390f35b3480156101f457600080fd5b5061020f600480360381019061020a9190610a98565b610751565b005b34801561021d57600080fd5b5061023860048036038101906102339190610ec3565b61075e565b005b34801561024657600080fd5b50610261600480360381019061025c9190610b78565b610826565b60405161026e9190610dad565b60405180910390f35b60016020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b816001600082815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461035d576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103678383610884565b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f1576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8151811015610527576001600084815260200190815260200160002060030182828151811061042657610425610ef0565b5b60200260200101519080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016000848152602001908152602001600020600101546001600085815260200190815260200160002060040160008484815181106104d0576104cf610ef0565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508061052090610f4e565b90506103f4565b507fdd70a6ea8a03765f9fb41f847122dcaab5764ecb37187278123ecb3a09180088826040516105579190610dad565b60405180910390a15050565b8034101561059d576040517f5f12e2ee00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336001600084815260200190815260200160002060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060016000848152602001908152602001600020600101819055503460016000848152602001908152602001600020600001819055507f4fbf25982cc7ba607825ed540f0e46f875ebfffe4a209e9de3c588906aabd77b8282343360405161065d9493929190610f96565b60405180910390a15050565b600060016000838152602001908152602001600020600101549050919050565b60606001600083815260200190815260200160002060030180548060200260200160405190810160405280929190818152602001828054801561072157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106d7575b50505050509050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61075b8133610884565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107e3576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006001600084815260200190815260200160002060040160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60006001600084815260200190815260200160002060040160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006001600085815260200190815260200160002060000154905060008211610931576040517f1314196500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8181101561096b576040517f2a1c3a3f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b816001600086815260200190815260200160002060000160008282546109919190610fdb565b9250508190555060008373ffffffffffffffffffffffffffffffffffffffff16836040516109be90611040565b60006040518083038185875af1925050503d80600081146109fb576040519150601f19603f3d011682016040523d82523d6000602084013e610a00565b606091505b5050905080610a0e57600080fd5b7fbfb36529287d5a1dcbfbbc958f0a7337a1f5bca269edc737da0be1be702f22518385604051610a3f929190611055565b60405180910390a15050505050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610a7581610a62565b8114610a8057600080fd5b50565b600081359050610a9281610a6c565b92915050565b600060208284031215610aae57610aad610a58565b5b6000610abc84828501610a83565b91505092915050565b610ace81610a62565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610aff82610ad4565b9050919050565b610b0f81610af4565b82525050565b6000606082019050610b2a6000830186610ac5565b610b376020830185610ac5565b610b446040830184610b06565b949350505050565b610b5581610af4565b8114610b6057600080fd5b50565b600081359050610b7281610b4c565b92915050565b60008060408385031215610b8f57610b8e610a58565b5b6000610b9d85828601610a83565b9250506020610bae85828601610b63565b9150509250929050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610c0682610bbd565b810181811067ffffffffffffffff82111715610c2557610c24610bce565b5b80604052505050565b6000610c38610a4e565b9050610c448282610bfd565b919050565b600067ffffffffffffffff821115610c6457610c63610bce565b5b602082029050602081019050919050565b600080fd5b6000610c8d610c8884610c49565b610c2e565b90508083825260208201905060208402830185811115610cb057610caf610c75565b5b835b81811015610cd95780610cc58882610b63565b845260208401935050602081019050610cb2565b5050509392505050565b600082601f830112610cf857610cf7610bb8565b5b8135610d08848260208601610c7a565b91505092915050565b60008060408385031215610d2857610d27610a58565b5b6000610d3685828601610a83565b925050602083013567ffffffffffffffff811115610d5757610d56610a5d565b5b610d6385828601610ce3565b9150509250929050565b60008060408385031215610d8457610d83610a58565b5b6000610d9285828601610a83565b9250506020610da385828601610a83565b9150509250929050565b6000602082019050610dc26000830184610ac5565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610dfd81610af4565b82525050565b6000610e0f8383610df4565b60208301905092915050565b6000602082019050919050565b6000610e3382610dc8565b610e3d8185610dd3565b9350610e4883610de4565b8060005b83811015610e79578151610e608882610e03565b9750610e6b83610e1b565b925050600181019050610e4c565b5085935050505092915050565b60006020820190508181036000830152610ea08184610e28565b905092915050565b6000602082019050610ebd6000830184610b06565b92915050565b600060208284031215610ed957610ed8610a58565b5b6000610ee784828501610b63565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f5982610a62565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610f8b57610f8a610f1f565b5b600182019050919050565b6000608082019050610fab6000830187610ac5565b610fb86020830186610ac5565b610fc56040830185610ac5565b610fd26060830184610b06565b95945050505050565b6000610fe682610a62565b9150610ff183610a62565b925082820390508181111561100957611008610f1f565b5b92915050565b600081905092915050565b50565b600061102a60008361100f565b91506110358261101a565b600082019050919050565b600061104b8261101d565b9150819050919050565b600060408201905061106a6000830185610ac5565b6110776020830184610b06565b939250505056fea2646970667358221220678d21cce41ed3bb8beb0305b7b14e956bb2b27bc45537c9c47f464fcb2bdbe164736f6c63430008120033";

type GameManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GameManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GameManager__factory extends ContractFactory {
  constructor(...args: GameManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _trustedManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GameManager> {
    return super.deploy(
      _trustedManager,
      overrides || {}
    ) as Promise<GameManager>;
  }
  override getDeployTransaction(
    _trustedManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_trustedManager, overrides || {});
  }
  override attach(address: string): GameManager {
    return super.attach(address) as GameManager;
  }
  override connect(signer: Signer): GameManager__factory {
    return super.connect(signer) as GameManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GameManagerInterface {
    return new utils.Interface(_abi) as GameManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GameManager {
    return new Contract(address, _abi, signerOrProvider) as GameManager;
  }
}
